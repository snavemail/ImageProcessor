package cs3500.imageprocessor.model.image;import org.junit.Before;import org.junit.Test;import cs3500.imageprocessor.model.functions.FunctionUtils;import static org.junit.Assert.assertEquals;/** * Tests the PixelImpl class. */public class PixelTest {  //Primary Colors  PixelImpl white;  PixelImpl black;  PixelImpl red;  PixelImpl green;  PixelImpl blue;  //Secondary Colors  PixelImpl yellow;  PixelImpl magenta;  PixelImpl cyan;  //Tertiary Colors  PixelImpl orange;  PixelImpl violet;  PixelImpl azure;  PixelImpl springGreen;  PixelImpl chartreuse;  PixelImpl rose;  /**   * Sets up the images and pixels for testing.   */  @Before  public void setUp() {    white = new PixelImpl(0, 0, 0);    black = new PixelImpl(255, 255, 255);    //Primary Colors    red = new PixelImpl(255, 0, 0);    green = new PixelImpl(0, 255, 0);    blue = new PixelImpl(0, 0, 255);    //Secondary Colors    yellow = new PixelImpl(255, 255, 0);    magenta = new PixelImpl(255, 0, 255);    cyan = new PixelImpl(0, 255, 255);    //Tertiary Colors    orange = new PixelImpl(255, 127, 0);    rose = new PixelImpl(255, 0, 127);    violet = new PixelImpl(127, 0, 255);    azure = new PixelImpl(0, 127, 255);    springGreen = new PixelImpl(0, 255, 127);    chartreuse = new PixelImpl(127, 255, 0);  }  /**   * Tests getRGB for each color.   */  @Test  public void getRGB() {    this.setUp();    assertEquals(0, white.getRed());    assertEquals(0, white.getGreen());    assertEquals(0, white.getBlue());    assertEquals(255, black.getRed());    assertEquals(255, black.getGreen());    assertEquals(255, black.getBlue());    assertEquals(255, red.getRed());    assertEquals(0, red.getGreen());    assertEquals(0, red.getBlue());    assertEquals(0, green.getRed());    assertEquals(255, green.getGreen());    assertEquals(0, green.getBlue());    assertEquals(0, blue.getRed());    assertEquals(0, blue.getGreen());    assertEquals(255, blue.getBlue());    assertEquals(255, yellow.getRed());    assertEquals(255, yellow.getGreen());    assertEquals(0, yellow.getBlue());    assertEquals(255, magenta.getRed());  }  /**   * Tests hashcode for each color.   */  @Test  public void testHashCode() {    this.setUp();    assertEquals(0, white.hashCode());    assertEquals(16777215, black.hashCode());    assertEquals(16711680, red.hashCode());    assertEquals(65280, green.hashCode());    assertEquals(255, blue.hashCode());    assertEquals(16776960, yellow.hashCode());    assertEquals(16711935, magenta.hashCode());    assertEquals(65535, cyan.hashCode());    assertEquals(16744192, orange.hashCode());  }  /**   * Test to convert RGB to Channel value.   */  @Test  public void convertRGBToChannel() {    this.setUp();    assertEquals(0, FunctionUtils.channelValue(0, 0, 0));    assertEquals(16777215, FunctionUtils.channelValue(255, 255, 255));    assertEquals(16711680, FunctionUtils.channelValue(255, 0, 0));    assertEquals(65280, FunctionUtils.channelValue(0, 255, 0));    assertEquals(255, FunctionUtils.channelValue(0, 0, 255));    assertEquals(16776960, FunctionUtils.channelValue(255, 255, 0));  }}