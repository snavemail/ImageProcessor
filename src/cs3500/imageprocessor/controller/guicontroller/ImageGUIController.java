package cs3500.imageprocessor.controller.guicontroller;import java.awt.image.BufferedImage;import java.io.IOException;/** * Represents a controller for the GUI. This controller is responsible for running the image * processor. It is designed to be user-friendly. */public interface ImageGUIController {  /**   * Saves the image as either a PPM format.   *   * @param fileName represents the file name of the image.   */  void saveImage(String fileName) throws IOException, IllegalAccessException;  /**   * Saves the project as a collage format.   *   * @param fileName represents the file name of the project.   */  void saveProject(String fileName) throws IOException;  /**   * Adds a layer to the project.   *   * @param layerName represents the name of the layer.   */  void addLayer(String layerName) throws IllegalAccessException;  /**   * Applies a filter to the image.   *   * @param filterName represents the name of the filter.   * @throws IllegalAccessException if the current layer cannot be accessed.   */  void applyFilter(String filterName) throws IllegalAccessException;  /**   * Applies a blending filter to the image.   *   * @param filterName represents the name of the filter. This value must not be null.   * @throws IllegalAccessException if the current layer cannot be accessed.   */  void applyBlendingFilter(String filterName) throws IllegalAccessException;  /**   * Starts a new project. This method clears the current project and starts a new one.   *   * @param width  represents the width of the new project. This value must be greater than 0.   * @param height represents the height of the new project. This value must be greater than 0.   */  void newProject(int width, int height);  /**   * Loads a project.   *   * @param fileName represents the name of the project.   * @throws IOException if the file cannot be read.   */  void load(String fileName) throws IOException;  /**   * Loads an image to the layer.   *   * @param name represents the name of the layer.   * @param x    represents the x coordinate of the image.   * @param y    represents the y coordinate of the image.   */  void addImageToLayer(String name, int x, int y);  /**   * Sets the current layer.   *   * @param layerName represents the name of the layer.*   */  void setCurrentLayer(String layerName);  /**   * Sets the current layer list into the view.   */  void setLayerList();  /**   * Creates an Image.   */  BufferedImage createImage();}