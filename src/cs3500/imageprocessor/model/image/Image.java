package cs3500.imageprocessor.model.image;import java.util.List;import cs3500.imageprocessor.model.functions.FunctionUtils;/** * This interface represents an image. An image has a list of pixels, a width, a height, and a * maximum RGB value. An image can be applied a function to it. An image can also be moved to a * different location. */public interface Image extends FunctionUtils {  /**   * Returns the x location on this Image.   *   * @return x location   */  int getXLoc();  /**   * Returns the y location on this Image.   *   * @return y location   */  int getYLoc();  /**   * Sets the x location on this Image.   *   * @param xLoc x location   */  void setXLoc(int xLoc);  /**   * Sets the y location on this Image.   *   * @param yLoc y location   */  void setYLoc(int yLoc);  /**   * Returns the height.   *   * @return height   */  int getHeight();  /**   * Returns the width.   *   * @return width   */  int getWidth();  /**   * Returns the maximum RGB value.   *   * @return maxValue   */  int getMaxValue();  /**   * Gets the image list.   *   * @return the image list.   */  List<List<Pixel>> getImageList();  /**   * Flatten the image list into a list of pixels.   *   * @return the flattened list of pixels.   */  List<Pixel> flattenList();  /**   * Returns if the given x and y are in the bounds of the given width and height.   *   * @param x      the x value   * @param y      the y value   * @param width  the width   * @param height the height   * @return true if the x and y are in the bounds of the width and height, false otherwise.   */  boolean inBounds(int x, int y, int width, int height);  /**   * Returns the pixel at the given x and y.   *   * @param x the x value   * @param y the y value   * @return the pixel at the given x and y.   */  Pixel getPixel(int x, int y);}