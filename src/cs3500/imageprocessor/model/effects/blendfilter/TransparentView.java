package cs3500.imageprocessor.model.effects.blendfilter;import cs3500.imageprocessor.model.image.Pixel;import cs3500.imageprocessor.model.image.PixelImpl;/** * Represents a blending filter that renders the top layer based on its transparency. */public class TransparentView implements BlendingFilter {  private final String name = "Transparent-View";  @Override  public String getName() {    return this.name;  }  @Override  public Pixel apply(Pixel pixel, Pixel bottomPixel) {    float a = pixel.getAlpha();    float r = pixel.getRed();    float g = pixel.getGreen();    float b = pixel.getBlue();    float da = bottomPixel.getAlpha();    float dr = bottomPixel.getRed();    float dg = bottomPixel.getGreen();    float db = bottomPixel.getBlue();    float app = a / 255 + da / 255 * (1 - a / 255);    int ap = (int) (app * 255);    int red = (int) ((a / 255 * r + (dr * (da / 255)) * (1 - a / 255)) * (1 / app));    int green = (int) ((a / 255 * g + (dg * (da / 255)) * (1 - a / 255)) * (1 / app));    int blue = (int) ((a / 255 * b + (db * (da / 255)) * (1 - a / 255)) * (1 / app));    return new PixelImpl(ap, red, green, blue);  }}