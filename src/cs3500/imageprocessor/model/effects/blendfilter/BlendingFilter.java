package cs3500.imageprocessor.model.effects.blendfilter;import cs3500.imageprocessor.model.effects.LayerFilter;import cs3500.imageprocessor.model.image.Pixel;import cs3500.imageprocessor.model.image.PixelImpl;import static cs3500.imageprocessor.model.functions.RepresentationConverter.convertHSLtoRGB;/** * This interface represents a filter for a layer that blends with the pixel below it. * This filter is used to create a blending effect. This filter is applied to the top layer. */public interface BlendingFilter extends LayerFilter {  /**   * Applies the filter to the given pixel.   *   * @param pixel the pixel to be filtered.   * @return the filtered pixel.   */  Pixel apply(Pixel pixel, Pixel bottomPixel);  /**   * Returns a new pixel with the given HSL values.   *   * @param newHSL the new HSL values.   * @return a new pixel with the given HSL values.   */  static Pixel getPixel(Double[] newHSL) {    Double[] newRGB = convertHSLtoRGB(newHSL[0], newHSL[1], newHSL[2]);    int red = Math.round(newRGB[0].intValue());    int green = Math.round(newRGB[1].intValue());    int blue = Math.round(newRGB[2].intValue());    return new PixelImpl(red, green, blue);  }}